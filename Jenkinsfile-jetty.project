pipeline {
  agent { node { label 'linux' } }
    parameters {
        string(name: 'PLEXUS_JAVA_VERSION', defaultValue: '1.0.5-SNAPSHOT', description: 'Plexus Java version')
    }  
  stages {
    stage("cleanup the workspace"){
        steps{
            script{
              sh "rm -rf *"        
            }
        }
    }  
    
    stage("plexus-languages"){
        steps {
            ws("jetty.project"){
              git url: "https://github.com/eclipse/jetty.project.git", branch: "jetty-10.0.x" 
            container( 'jetty-build' ) {
              timeout( time: 120, unit: 'MINUTES' ) {
                mavenBuild( "jdk11", "clean install -Dspotbugs.skip=true -Djacoco.skip=true", "maven3")
                recordIssues id: "jdk17", name: "Static Analysis jdk17", aggregatingResults: true, enabledForFailure: true, tools: [mavenConsole(), java(), checkStyle(), spotBugs(), pmdParser()]
              }
            }
            }
          }   
    }
}  

def mavenBuild(jdk, cmdline, mvnName) {
  script {
    try {
      withEnv(["JAVA_HOME=${ tool "$jdk" }",
               "PATH+MAVEN=${ tool "$jdk" }/bin:${tool "$mvnName"}/bin",
               "MAVEN_OPTS=-Xms2g -Xmx4g -Djava.awt.headless=true"]) {
        configFileProvider(
                [configFile(fileId: 'oss-settings.xml', variable: 'GLOBAL_MVN_SETTINGS')]) {
          sh "mvn --no-transfer-progress -s $GLOBAL_MVN_SETTINGS -Dmaven.repo.local=.repository -Pci -V -B -e -Djetty.testtracker.log=true $cmdline"
        }
      }
    }
    finally
    {
      junit testResults: '**/target/surefire-reports/*.xml,**/target/invoker-reports/TEST*.xml', allowEmptyResults: true
    }
  }
}
